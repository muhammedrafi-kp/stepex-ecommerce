<%- include("../layouts/header.ejs") %>


    <style>
        .hero-wrap {
            margin-top: 110px;
            display: flex;
            align-items: center;

        }

        .shop-heading {
            text-align: left;
        }

        .breadcrumbs {
            text-align: right;
        }

        .card {
            position: relative;
            display: flex;
            flex-direction: column;
            min-width: 0;
            word-wrap: break-word;
            background-color: #fff;
            background-clip: border-box;
            border: 0 solid transparent;
            border-radius: .25rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 6px 0 rgb(218 218 253 / 65%), 0 2px 6px 0 rgb(206 206 238 / 54%);
        }

        .me-2 {
            margin-right: .5rem !important;
        }
    </style>

    <!---- breadcrumbs---->
    <div style="background-color: #f0f0f0; height: 60px; z-index: 1;" class="hero-wrap">
        <div class="container">
            <div class="row no-gutters slider-text align-items-start">

                <div class="col-md-6 ftco-animate shop-heading">
                    <h6 style=" color: #000;">MY ACCOUNT</h6>
                </div>

                <div class="col-md-6 ftco-animate breadcrumbs">
                    <div class="breadcrumbs">
                        <span class="mr-2">
                            <a href="/"><span class="icon-home2"></span>Home ></a>
                            <a href="/shop">Account details</a>
                        </span>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <!---- profile sidebar---->
    <section class="ftco-section">
        <div class="container d-grid justify-content-between " style="margin-top:-50px;">
            <div class="row">

                <div class="container">
                    <div class="main-body">
                        <div class="row">

                            <div class="col-lg-4 ftco-animate">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="d-flex flex-column align-items-center text-center">
                                            <img src="https://bootdey.com/img/Content/avatar/avatar6.png" alt="Admin"
                                                class="rounded-circle p-1 bg-secondary " width="50">
                                            <div class="mt-3">
                                                <h6>
                                                    <%=user.name%>
                                                </h6>
                                            </div>
                                        </div>

                                        <ul class="list-group list-group-flush ">
                                            <li
                                                class="list-group-item d-flex justify-content-between align-items-center flex-wrap border-0 ">
                                                <a href="/profile"
                                                    class=" btn btn-primary py-2 px-4 mr-2 w-100 active rounded"
                                                    style="font-size: 14px; font-weight: bold; "><span
                                                        class="icon-person mx-1"></span> Account deatails</a>


                                            </li>
                                            <li
                                                class="list-group-item d-flex justify-content-between align-items-center flex-wrap border-0">
                                                <a href="/orders" class=" btn btn-primary py-2 px-4 mr-2 w-100 rounded"
                                                    style="font-size: 14px; font-weight: bold;"><span
                                                        class="icon-shopping_cart   mx-1"></span><span>Orders</span></a>
                                            </li>
                                            <li
                                                class="list-group-item d-flex justify-content-between align-items-center flex-wrap  border-0">
                                                <a href="/address" class=" btn btn-primary py-2 px-4 mr-2 w-100 rounded"
                                                    style="font-size: 14px; font-weight: bold;"><span
                                                        class="icon-home mx-1"></span><span>Addresses</span> </a>
                                            </li>
                                            <li
                                                class="list-group-item d-flex justify-content-between align-items-center flex-wrap  border-0">
                                                <a href="/wallet" class=" btn btn-primary py-2 px-4 mr-2 w-100 rounded"
                                                    style="font-size: 14px; font-weight: bold;"><span
                                                        class="icon-account_balance_wallet mx-1"></span>Wallet</a>
                                            </li>
                                            <li
                                                class="list-group-item d-flex justify-content-between align-items-center flex-wrap  border-0">
                                                <a href="/coupons" class=" btn btn-primary py-2 px-4 mr-2 w-100 rounded"
                                                    style="font-size: 14px; font-weight: bold;"><span
                                                        class="icon-tags mx-1"></span>Coupons</a>
                                            </li>
                                            <li
                                                class="list-group-item d-flex justify-content-between align-items-center flex-wrap  border-0">
                                                <a href="/logout" class=" btn btn-primary py-2 px-4 mr-2 w-100 rounded"
                                                    style="font-size: 14px; font-weight: bold;"><span
                                                        class="icon-exit_to_app mx-1"></span>Logout</a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-8 ftco-animate">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="row mb-3">
                                            <div class="col-sm-3">
                                                <h6 class="mb-0 font-weight-bold mt-3">User name </h6>
                                            </div>
                                            <div class="col-sm-9 text-secondary">
                                                <input type="text" id="name" style="opacity:60%;"
                                                    class="form-control rounded" value="<%=user.name%>" readonly>
                                                <span id="name-error" style="font-size: 13px;color: red;"></span>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-sm-3">
                                                <h6 class="mb-0 font-weight-bold mt-3">Email</h6>
                                            </div>
                                            <div class="col-sm-9 text-secondary">
                                                <input type="text" id="email" style="opacity:60%;"
                                                    class="form-control rounded" value="<%=user.email%>" readonly>
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <div class="col-sm-3 align-items-center  mt-3">
                                                <h6 class="mb-0 font-weight-bold">Mobile</h6>
                                            </div>
                                            <div class="col-sm-9 text-secondary ">
                                                <input type="text" id="mobile" style="opacity:60%;"
                                                    class="form-control rounded" value="<%=user.mobile%>" readonly>
                                                <span id="mobile-error" style="font-size: 13px;color: red;"></span>
                                            </div>
                                        </div>

                                        <!-- Change Password moved to modal -->


                                        <div class="d-flex">
                                            <div class="row w-100">
                                                <div class="col-sm-3 px-0 "></div>
                                                <div class="col-sm-9 text-secondary text-right">
                                                    <button type="button" id="edit-cancel-btn" class="btn btn-outline-secondary px-4 rounded d-none mr-2">Cancel</button>
                                                    <button type="button" id="edit-btn" class="btn btn-black px-4 rounded">Edit</button>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row mt-5 d-flex ">
                                            <div class="col-lg-3 align-items-center mt-3">
                                                <h6 class="mb-0 font-weight-bold">Referal link</h6>
                                            </div>
                                            <div class="col-lg-6 text-secondary ">
                                                <input type="text" id="referal-code" class="form-control rounded "
                                                    value="https://stepex.mhdrafi.online/register?referral_code=<%=user.referral_code%>"
                                                    style="font-size: 14px;" readonly>

                                            </div>
                                            <div class="col-lg-3 mt-2">
                                                <div id="copy-btn" class="btn btn-black w-75 rounded">Copy</div>
                                            </div>
                                        </div>

                                        

                                        <div class="row ">
                                            <div class="col-lg-3 align-items-center mt-3"></div>
                                            <div class="col-lg-9 text-secondary ">

                                                <div class="my-2 text-success " style="font-size: 14px;">
                                                    Earn ₹100 for each referral when they place their first order.
                                                </div>
                                            </div>

                                        </div>

                                        <div class="row mt-5">
                                            <div class="col-lg-3 align-items-center mt-2"></div>
                                            <div class="col-lg-9 text-secondary ">
                                                <button type="button" id="change-password-btn"
                                                    class="btn btn-black px-4 rounded" data-toggle="modal"
                                                    data-target="#changePasswordModal">Change password</button>
                                            </div>
                                        </div>


                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </section>

    <!-- Change Password Modal -->
    <div class="modal ftco-animate" id="changePasswordModal" tabindex="-1" role="dialog"
        aria-labelledby="changePasswordModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title font-weight-bold" id="changePasswordModalLabel">Change Password</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="changePasswordForm">
                        <div class="form-group">
                            <label class="font-weight-bold">Current Password</label>
                            <div style="position: relative;">
                                <input type="password" id="currentpassword" class="form-control rounded">
                                <button type="button" class="toggle-password" data-target="currentpassword" aria-label="Show password" style="position:absolute; right:12px; top:50%; transform: translateY(-50%); background: none; border: none; padding: 4px; cursor: pointer;">
                                    <span class="eye-icon" aria-hidden="true">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"></path>
                                            <circle cx="12" cy="12" r="3"></circle>
                                        </svg>
                                    </span>
                                    <span class="eye-off-icon" style="display:none;" aria-hidden="true">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <path d="M17.94 17.94A10.94 10.94 0 0 1 12 20c-7 0-11-8-11-8a21.77 21.77 0 0 1 5.06-6.94M9.9 4.24A10.94 10.94 0 0 1 12 4c7 0 11 8 11 8a21.8 21.8 0 0 1-3.22 4.49M1 1l22 22"></path>
                                        </svg>
                                    </span>
                                </button>
                            </div>
                            <span id="current-password-error" style="font-size: 13px;color: #BA0933;"></span>
                        </div>
                        <div class="form-group">
                            <label class="font-weight-bold">New Password</label>
                            <div style="position: relative;">
                                <input type="password" id="newpassword" class="form-control rounded">
                                <button type="button" class="toggle-password" data-target="newpassword" aria-label="Show password" style="position:absolute; right:12px; top:50%; transform: translateY(-50%); background: none; border: none; padding: 4px; cursor: pointer;">
                                    <span class="eye-icon" aria-hidden="true">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"></path>
                                            <circle cx="12" cy="12" r="3"></circle>
                                        </svg>
                                    </span>
                                    <span class="eye-off-icon" style="display:none;" aria-hidden="true">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <path d="M17.94 17.94A10.94 10.94 0 0 1 12 20c-7 0-11-8-11-8a21.77 21.77 0 0 1 5.06-6.94M9.9 4.24A10.94 10.94 0 0 1 12 4c7 0 11 8 11 8a21.8 21.8 0 0 1-3.22 4.49M1 1l22 22"></path>
                                        </svg>
                                    </span>
                                </button>
                            </div>
                            <span id="new-password-error" style="font-size: 13px;color: #BA0933;"></span>
                        </div>
                        <div class="form-group">
                            <label class="font-weight-bold">Confirm Password</label>
                            <div style="position: relative;">
                                <input type="password" id="confirm-password" class="form-control rounded">
                                <button type="button" class="toggle-password" data-target="confirm-password" aria-label="Show password" style="position:absolute; right:12px; top:50%; transform: translateY(-50%); background: none; border: none; padding: 4px; cursor: pointer;">
                                    <span class="eye-icon" aria-hidden="true">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"></path>
                                            <circle cx="12" cy="12" r="3"></circle>
                                        </svg>
                                    </span>
                                    <span class="eye-off-icon" style="display:none;" aria-hidden="true">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <path d="M17.94 17.94A10.94 10.94 0 0 1 12 20c-7 0-11-8-11-8a21.77 21.77 0 0 1 5.06-6.94M9.9 4.24A10.94 10.94 0 0 1 12 4c7 0 11 8 11 8a21.8 21.8 0 0 1-3.22 4.49M1 1l22 22"></path>
                                        </svg>
                                    </span>
                                </button>
                            </div>
                            <span id="confirm-password-error" style="font-size: 13px;color: #BA0933;"></span>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-black rounded" data-dismiss="modal">Close</button>
                    <button type="button" id="change-password-save-btn" class="btn btn-primary rounded">Save
                        Password</button>
                </div>
            </div>
        </div>
    </div>

    <script src='https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js'></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Password toggle functionality
            document.addEventListener('click', function(e) {
                if (e.target.closest('.toggle-password')) {
                    const button = e.target.closest('.toggle-password');
                    const targetId = button.getAttribute('data-target');
                    const input = document.getElementById(targetId);
                    const eyeIcon = button.querySelector('.eye-icon');
                    const eyeOffIcon = button.querySelector('.eye-off-icon');
                    
                    if (input.type === 'password') {
                        input.type = 'text';
                        eyeIcon.style.display = 'none';
                        eyeOffIcon.style.display = 'inline';
                    } else {
                        input.type = 'password';
                        eyeIcon.style.display = 'inline';
                        eyeOffIcon.style.display = 'none';
                    }
                }
            });

            // Clean up any lingering backdrops when modal is hidden manually
            $('#changePasswordModal').on('hidden.bs.modal', function () {
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
            });
            const editBtn = document.getElementById('edit-btn');
            const editCancelBtn = document.getElementById('edit-cancel-btn');
            const nameField = document.getElementById('name');
            const mobileField = document.getElementById('mobile');
            const nameErrorEl = document.getElementById('name-error');
            const mobileErrorEl = document.getElementById('mobile-error');

            const markInvalid = (inputEl, errorEl, message) => {
                inputEl.classList.add('border', 'border-danger');
                errorEl.textContent = message;
            };

            const clearInvalid = (inputEl, errorEl) => {
                inputEl.classList.remove('border', 'border-danger');
                errorEl.textContent = '';
            };

            const validateName = (name) => {
                const trimmed = name.trim();
                if (!trimmed) return markInvalid(nameField, nameErrorEl, 'Name is required'), false;
                if (!/^[A-Za-z]/.test(trimmed)) {
                    return markInvalid(nameField, nameErrorEl, 'Name cannot start with special characters or numbers'), false;
                }
                if (trimmed.length < 3) {
                    return markInvalid(nameField, nameErrorEl, 'Name must be at least 3 characters'), false;
                }
                if (trimmed.length > 15) {
                    return markInvalid(nameField, nameErrorEl, 'Name must be at most 15 characters'), false;
                }
                if (/^_+$/.test(trimmed)) {
                    return markInvalid(nameField, nameErrorEl, 'Name cannot be only underscores'), false;
                }
                if (/^\d+$/.test(trimmed)) {
                    return markInvalid(nameField, nameErrorEl, 'Name cannot be only numbers'), false;
                }
                clearInvalid(nameField, nameErrorEl);
                return true;
            };

            const validateMobile = (mobile) => {
                const trimmed = mobile.trim();
                if (!trimmed) return markInvalid(mobileField, mobileErrorEl, 'Phone number is required'), false;
                if (!/^[6-9]\d{9}$/.test(trimmed)) {
                    return markInvalid(mobileField, mobileErrorEl, 'Phone number must start with 6-9 and contain exactly 10 digits'), false;
                }
                clearInvalid(mobileField, mobileErrorEl);
                return true;
            };

            const validateProfileUpdate = () => {
                const isNameValid = validateName(nameField.value);
                const isMobileValid = validateMobile(mobileField.value);
                if (!isNameValid) {
                    nameField.focus();
                    nameField.scrollIntoView({ behavior: 'smooth', block: 'center' });
                } else if (!isMobileValid) {
                    mobileField.focus();
                    mobileField.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
                return isNameValid && isMobileValid;
            };

            nameField.addEventListener('input', () => {
                if (!nameField.readOnly) validateName(nameField.value);
            });
            mobileField.addEventListener('input', () => {
                if (!mobileField.readOnly) validateMobile(mobileField.value);
            });


            editBtn.addEventListener('click', function () {
                if (editBtn.textContent === 'Edit') {

                    nameField.readOnly = false;
                    mobileField.readOnly = false;
                    nameField.style.opacity = '1';
                    mobileField.style.opacity = '1';
                    clearInvalid(nameField, nameErrorEl);
                    clearInvalid(mobileField, mobileErrorEl);

                    editBtn.classList.remove('btn-black');
                    editBtn.classList.add('btn-primary');
                    editBtn.textContent = 'Save';
                    editCancelBtn.classList.remove('d-none');
                } else {
                    if (!validateProfileUpdate()) {
                        return;
                    }
                    const formData = {
                        name: nameField.value,
                        mobile: mobileField.value
                    };

                    fetch('/user', {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log('Success:', data);

                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: 'Your profile has been updated successfully!',
                                timer: 2000,
                                timerProgressBar: true,
                                showConfirmButton: false
                            });


                            nameField.readOnly = true;
                            mobileField.readOnly = true;
                            nameField.style.opacity = '0.5';
                            mobileField.style.opacity = '0.5';
                            editBtn.classList.remove('btn-primary');
                            editBtn.classList.add('btn-black');
                            editBtn.textContent = 'Edit';
                            editCancelBtn.classList.add('d-none');
                        })
                        .catch(error => {
                            console.error('Error:', error);

                        });
                }
            });

            // Cancel Edit User
            editCancelBtn.addEventListener('click', function () {
                nameField.value = '<%=user.name%>';
                mobileField.value = '<%=user.mobile%>';
                nameField.readOnly = true;
                mobileField.readOnly = true;
                nameField.style.opacity = '0.5';
                mobileField.style.opacity = '0.5';
                clearInvalid(nameField, nameErrorEl);
                clearInvalid(mobileField, mobileErrorEl);
                editBtn.classList.remove('btn-primary');
                editBtn.classList.add('btn-black');
                editBtn.textContent = 'Edit';
                editCancelBtn.classList.add('d-none');
            });

            const changePasswordBtn = document.getElementById('change-password-btn');
            const changePasswordSaveBtn = document.getElementById('change-password-save-btn');
            const currentPasswordField = document.getElementById('currentpassword');
            const newPasswordField = document.getElementById('newpassword');
            const confirmPasswordField = document.getElementById('confirm-password');

            const validatePasswordChange = () => {
                const currentPassword = currentPasswordField.value.trim();
                const newPassword = newPasswordField.value.trim();
                const confirmPassword = confirmPasswordField.value.trim();

                const validatePassword = (password) => {
                    const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\da-zA-Z]).{8,}$/;
                    return regex.test(password);
                };

                var isValid = true;

                if (!currentPassword) {
                    document.getElementById('current-password-error').textContent = 'Current password is required.';
                    isValid = false;
                } else {
                    document.getElementById("current-password-error").textContent = "";
                }

                if (!newPassword) {
                    document.getElementById('new-password-error').textContent = 'New password is required.';
                    isValid = false;
                } else if (!validatePassword(newPassword)) {
                    document.getElementById('new-password-error').textContent = "Password must be at least 8 characters and contain at least one uppercase letter, one lowercase letter, one number, and one special character.";
                    isValid = false;
                } else if (newPassword === currentPassword) {
                    document.getElementById("new-password-error").textContent = 'New password should not be the same as the current one.';
                    isValid = false;
                } else {
                    document.getElementById("new-password-error").textContent = "";
                }

                if (!confirmPassword) {
                    document.getElementById('confirm-password-error').textContent = 'Confirm password is required.';
                    isValid = false;
                } else if (newPassword !== confirmPassword) {
                    document.getElementById('confirm-password-error').textContent = 'Passwords do not match.';
                    isValid = false;
                } else {
                    document.getElementById("confirm-password-error").textContent = "";
                }

                return isValid;
            };


            // Save password from modal
            changePasswordSaveBtn.addEventListener('click', function () {
                if (!validatePasswordChange()) return;

                const formData = {
                    currentPassword: currentPasswordField.value,
                    newPassword: newPasswordField.value
                };

                fetch('/password', {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Success:', data);

                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Your password has been changed successfully!',
                            timer: 2000,
                            timerProgressBar: true,
                            showConfirmButton: false
                        });

                        // Reset and hide modal
                        currentPasswordField.value = '';
                        newPasswordField.value = '';
                        confirmPasswordField.value = '';
                        document.getElementById('current-password-error').textContent = '';
                        document.getElementById('new-password-error').textContent = '';
                        document.getElementById('confirm-password-error').textContent = '';
                        $('#changePasswordModal').modal('hide');
                        // Ensure any lingering backdrop is removed
                        setTimeout(function () {
                            $('body').removeClass('modal-open');
                            $('.modal-backdrop').remove();
                        }, 150);
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        document.getElementById('current-password-error').textContent = 'Invalid current password';
                        setTimeout(() => {
                            document.getElementById('current-password-error').textContent = '';
                        }, 3000)
                    });
            });
        });


        const copyBtn = document.getElementById('copy-btn');
        const referralCodeInput = document.getElementById('referal-code');

        copyBtn.addEventListener('click', function () {

            referralCodeInput.select();
            referralCodeInput.setSelectionRange(0, 99999);

            document.execCommand('copy');

            // Deselect the text
            referralCodeInput.setSelectionRange(0, 0);

            // Optionally, provide visual feedback to the user
            copyBtn.innerText = 'Copied!';
            setTimeout(function () {
                copyBtn.innerText = 'Copy';
            }, 1000);
        });

    </script>

    <%- include("../layouts/footer.ejs") %>